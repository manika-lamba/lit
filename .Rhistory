install.packages("handcodeR", force = TRUE)
library(handcodeR)
if(!require(pacman)) install.packages("pacman")
install.packages("pacman")
pacman::p_load(archiveRetriever,
stringr)
# Use the archiveRetriever to download article
nytimes_article <- scrape_urls(Urls = "http://web.archive.org/web/20201001004918/https://www.nytimes.com/2020/09/30/opinion/biden-trump-2020-debate.html",
Paths = c(title = "//h1[@itemprop='headline']",
author = "//span[@itemprop='name']",
date = "//time//text()",
article = "//section[@itemprop='articleBody']//p"))
# Split up the article in different sentences
sentences <- unlist(str_split(nytimes_article$article, pattern = "(?<=\\.)\\s"))
head(sentences)
annotated <- handcode(data = sentences,
candidate = c("Joe Biden", "Donald Trump"),
sentiment = c("positive", "negative"))
View(annotated)
install.packages("revtools")
library (revtools)
library(shiny); runApp('Desktop/coding_thanking-world/coding.R')
source("~/Downloads/yt_rabbit_hole-master/shiny_app/bridge_coding_analysis.R")
library(dplyr)
runApp('Desktop/shiny_app')
setwd("/Users/manika/Desktop/shiny_app")
runApp()
runApp('~/Downloads/coding_shiny_app.R')
library (revtools)
read_bibliography()
screen_abstracts
file <- read_url("https://raw.githubusercontent.com/manika-lamba/lit/main/wos.csv")
file <- read.csv("https://raw.githubusercontent.com/manika-lamba/lit/main/wos.csv")
View(file)
data <- data <- read_bibliography(file)
data <- data <- read_bibliography(file)
data <- read_bibliography("https://raw.githubusercontent.com/manika-lamba/lit/main/wos.ris")
data <- read_bibliography("https://raw.githubusercontent.com/manika-lamba/lit/main/wos.ris")
data <- read_bibliography("https://raw.githubusercontent.com/manika-lamba/lit/main/wos.ris")
setwd("/Users/manika/Desktop/Github/lit")
data <- read_bibliography(wos.ris)
data <- read_bibliography("wos.ris")
data <- read_bibliography("/wos.ris")
data <- read_bibliography("wos.ris")
library (revtools)
data <- read_bibliography("wos.ris")
data <- read_bibliography("https://raw.githubusercontent.com/manika-lamba/lit/main/wos.bib")
data <- read_url("https://raw.githubusercontent.com/manika-lamba/lit/main/wos.bib")
data <- read_bibliography("wos.bib")
View(data)
result <- screen_abstracts(data)
result <- screen_titles(data)
result <- screen_abstracts(data)
result <- screen_abstracts(data)
duplicates <- screen_duplicates(data)
View(annotated)
View(nytimes_article)
## topics
topics <- screen_topics(data)
# install and load package
## install.packages("revtools")
install.packages("RefManageR")
# install and load package
## install.packages("revtools")
## install.packages("RefManageR")
library (revtools)
library(RefManageR)
# merging bib files from wos and scopus
# Read .bib files from Web of Science and Scopus
wos_bib <- ReadBib("wos.bib")
# merging bib files from wos and scopus
# Read .bib files from Web of Science and Scopus
wos_bib <- ReadBib("/wos.bib")
setwd("/Users/manika/Desktop/Github/lit")
# merging bib files from wos and scopus
# Read .bib files from Web of Science and Scopus
wos_bib <- ReadBib("wos.bib")
scopus_bib <- ReadBib("scopus.bib")
# merging bib files from wos and scopus
# Read .bib files from Web of Science and Scopus
wos_bib <- ReadBib("wos.bib")
wos_bib <- ReadBib("wos.bib")
wos_bib <- ReadBib("savedrecs.bib")
wos_bib <- ReadBib("savedrecs.bib")
wos_bib <- ReadBib("savedrecs.bib")
# Merge the two lists of references
merged_bib <- c(wos_bib, scopus_bib)
# Remove duplicates based on DOI (assuming DOI is present in both .bib files)
unique_bib <- unique(merged_bib, by = "DOI")
# Write the merged and deduplicated .bib file
WriteBib(unique_bib, file = "merged_and_deduplicated.bib")
# read file
data <- read_bibliography("merged_and_deduplicated.bib")
# install and load package
## install.packages("revtools")
## install.packages("RefManageR")
library (revtools)
library(RefManageR)
# read file
data <- read_bibliography("merged_and_deduplicated.bib")
# read file
data <- read_bibliography("merged_and_deduplicated.bib")
# read file
data <- read_bibliography("merged_and_deduplicated.bib")
# read file
data <- read_bibliography("merged_and_deduplicated.bib")
# read file
data <- read_bibliography("merged_and_deduplicated.bib")
# read file
data <- read_bibliography("merged_and_deduplicated.bib")
# read file
data <- read_bibliography("merged_and_deduplicated.bib")
# read file
data <- read_bibliography("merged_and_deduplicated.bib")
# read file
data <- read_bibliography("merged_and_deduplicated.bib")
# read file
data <- read_bibliography("merged_and_deduplicated.bib")
# read file
data <- read_bibliography("merged_and_deduplicated.bib")
wos_bib <- ReadBib("savedrecs.bib")
scopus_bib <- ReadBib("scopus.bib")
# Merge the two lists of references
merged_bib <- c(wos_bib, scopus_bib)
# Remove duplicates based on DOI (assuming DOI is present in both .bib files)
unique_bib <- unique(merged_bib, by = "DOI")
# Write the merged and deduplicated .bib file
WriteBib(unique_bib, file = "merged_and_deduplicated.bib")
# read file
data <- read_bibliography("merged_and_deduplicated.bib")
# read file
data <- read_bibliography("merged_and_deduplicated.bib")
# read file
data <- read_bibliography("merged_and_deduplicated.bib")
# read file
data <- read_bibliography("merged_and_deduplicated.bib")
# read file
data <- read_bibliography("merged_and_deduplicated.bib")
# read file
data <- read_bibliography("merged_and_deduplicated.bib")
# read file
data <- read_bibliography("merged_and_deduplicated.bib")
# read file
data <- read_bibliography("merged_and_deduplicated.bib")
# read file
data <- read_bibliography("merged_and_deduplicated.bib")
# read file
data <- read_bibliography("merged_and_deduplicated.bib")
# read file
data <- read_bibliography("merged_and_deduplicated.bib")
# read file
data <- read_bibliography("merged_and_deduplicated.bib")
# read file
data <- read_bibliography("merged_and_deduplicated.bib")
# read file
data <- read_bibliography("merged_and_deduplicated.bib")
# read file
data <- read_bibliography("merged_and_deduplicated.bib")
# read file
data <- read_bibliography("merged_and_deduplicated.bib")
# read file
data <- read_bibliography("merged_and_deduplicated.bib")
# read file
data <- read_bibliography("merged_and_deduplicated.bib")
# read file
data <- read_bibliography("merged_and_deduplicated.bib")
# read file
data <- read_bibliography("merged_and_deduplicated.bib")
# read file
data <- read_bibliography("merged_and_deduplicated.bib")
# read file
data <- read_bibliography("merged_and_deduplicated.bib")
# read file
data <- read_bibliography("merged_and_deduplicated.bib")
# read file
data <- read_bibliography("merged_and_deduplicated.bib")
# read file
data <- read_bibliography("merged_and_deduplicated.bib")
# read file
data <- read_bibliography("merged_and_deduplicated.bib")
# read file
data <- read_bibliography("merged_and_deduplicated.bib")
# read file
data <- read_bibliography("merged_and_deduplicated.bib")
# read file
data <- read_bibliography("merged_and_deduplicated.bib")
# read file
data <- read_bibliography("merged_and_deduplicated.bib")
# read file
data <- read_bibliography("merged_and_deduplicated.bib")
# read file
data <- read_bibliography("merged_and_deduplicated.bib")
# read file
data <- read_bibliography("merged_and_deduplicated.bib")
# read file
data <- read_bibliography("merged_and_deduplicated.bib")
# Write the merged and deduplicated .bib file
WriteBib(unique_bib, file = "merged_and_deduplicated.bib")
# read file
data <- read_bibliography("merged_and_deduplicated.bib")
